/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER 1
#define RAISE 2

/ {
    macros {
        remote_pass: remote_pass {
            label = "ZM_remote_pass";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp R &kp E &kp K &kp DOT &kp X &kp C &kp F &kp N0 &kp N &kp H &kp K &kp UNDER>
                , <&macro_press &kp LSHFT>
                , <&macro_tap &kp P &kp R &kp Z>
                , <&macro_release &kp LSHFT>
                , <&macro_tap &kp N3 &kp C &kp R &kp D>
                ;
        };
        vim_save: vim_save {
            label = "ZM_vim_save";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp COLON &kp W &kp RET> 
                ;
        };
        vim_quit: vim_quit {
            label = "ZM_vim_quit";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp COLON &kp Q &kp RET> 
                ;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  |
// |  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  |
// |  |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |  |
//                    | TAB | CTRL | ENT |   | SPC | BSP  | ESC |
                        bindings = <
   &kp TAB      &kp Q        &kp W &kp E &kp R &kp T         &kp Y &kp U         &kp I     &kp O   &kp P           &kp BSPC
   &kp ESC      &kp A        &kp S &kp D &kp F &kp G         &kp H &kp J         &kp K     &kp L   &kp SQT         &trans
   &kp LSHIFT   &mt LCTRL Z &kp X &kp C &kp V &kp B         &kp N &lt RAISE M   &kp COMMA &kp DOT &mt RSHIFT FSLH &trans
                  &kp TAB &kp LSHIFT &mt LGUI RET             &lt LOWER SPACE   &kp BSPC   &mt LALT ESC
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans &remote_pass &kp N7   &kp N8   &kp N9   &kp N0               &kp HOME   &kp PG_DN   &kp PG_UP    &kp END    &trans   &kp BSPC
   &trans &vim_save    &kp N4   &kp N5   &kp N6   &trans               &kp LEFT   &kp DOWN    &kp UP       &kp RIGHT  &vim_quit   &trans
   &trans &kp LCTRL    &kp N1   &kp N2   &kp N3   &trans               &bt BT_SEL 5  &bt BT_SEL 4  &bt BT_SEL 3 &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_CLR
                       &mt LGUI TAB  &kp LSHIFT  &mt LGUI RET        &kp SPACE  &kp BSPC   &mt LALT ESC
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans  &kp HASH     &kp SEMI      &kp LPAR    &kp RPAR   &kp DQT             &kp K_PP   &kp K_STOP     &kp K_VOL_UP &kp K_VOL_DN &trans     &trans
   &trans  &kp PIPE     &kp GT        &kp LBKT    &kp RBKT   &kp COLON           &trans     &trans         &kp GRAVE    &kp BSLH     &trans     &trans
   &trans  &kp LCTRL   &kp PERCENT   &kp MINUS   &kp UNDER  &kp EQUAL           &kp K_BACK &kp K_FORWARD  &trans       &trans       &kp RSHIFT &trans
                             &mt LGUI TAB  &kp LSHIFT  &mt LGUI RET             &kp SPACE   &kp BSPC    &kp ESC
                        >;
                };
        };
};
